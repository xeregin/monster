* Monster

An OpenStack Orchestration Engine

** To install
   - Use the monster installer at [[https://github.com/rcbops-qa/monster-installer.git]]

** Installation

   - Clone the repo and install
     #+BEGIN_SRC sh
       git clone https://github.com/rcbops-qa/monster.git ~/monster
       virtualenv -p `which python2` ~/monster/.venv
       source ~/monster/.venv/bin/activate
       pip install -r ~/monster/requirements.txt
     #+END_SRC

     note: If you're on a small server I've experienced failed
     installs of gevent because there isn't enough memory. Adding swap
     fixed things.

   - put your credentials in ~secret.yaml~ at the top level of monster

     #+BEGIN_EXAMPLE
       rackspace:
         user: YOUR_USERNAME
         api_key: YOUR_API_KEY
         auth_url: https://identity.api.rackspacecloud.com/v2.0/
         region: dfw
         plugin: rackspace
     #+END_EXAMPLE

     if you use cloudfiles your user and password can also be placed
     in the secret.yaml

     #+BEGIN_EXAMPLE
       cloudfiles:
         user: YOUR_USER
         password: YOUR_PASSWORD
     #+END_EXAMPLE

     If you use razor to provision servers add its API endpoint
     support clean up

     #+BEGIN_EXAMPLE
       razor:
         url: RAZOR_IP
     #+END_EXAMPLE

     You will also need to provide the default password for the cluster nodes

     #+BEGIN_EXAMPLE
       default_pass: DEFAULT_PASSWORD
     #+END_EXAMPLE

** CLI
   ~compute.py~ and ~storage.py~ are the CLIs

*** Build

    Deploys an OpenStack cluster

    #+BEGIN_SRC sh
      ./compute.py build -n my_build --template ubuntu-ha-neutron -c pubcloud-neutron.yaml -b v4.1.5 -p rackspace
    #+END_SRC

**** Arguments
     - name: name of the deployment
     - branch: branch rcbops cookbooks
     - template: name of template to use
     - config: config file
     - secret-path: path to secret config file
     - dry: only build environment (will provision in cloud)
     - log: path to log file
     - provisioner: provisioner to use - razor, rackspace, openstack

*** Show

    Shows details about an OpenStack deployment

    #+BEGIN_SRC sh
      compute.py show -n my_build -c pubcloud-neutron.yaml
    #+END_SRC

**** Arguments
     - name: name of the deployment
     - config: config file
     - secret-path: path to secret config file
     - log: path to log file

*** Destroy

    Destroys an OpenStack deployment

    #+BEGIN_SRC sh
      compute.py destroy -n my_build -c pubcloud-neutron.yaml
    #+END_SRC

**** Arguments
     - name: name of the deployment
     - config: config file
     - secret-path: path to secret config file
     - log: path to log file

*** openrc

    Load openrc environment variables into shell. After loaded
    openstack cli commands will communicate to cluster.

    #+BEGIN_SRC sh
      compute.py openrc -n my_build -c pubcloud-neutron.yaml
    #+END_SRC

    #+BEGIN_SRC sh
      nova boot --image cirros-image --flavor 1
    #+END_SRC

**** Arguments
     - name: name of the deployment
     - config: config file
     - secret-path: path to secret config file
     - log: path to log file

*** Horizon

    Attempts to open Horizon in browser

    #+BEGIN_SRC sh
      compute.py horizon -n my_build -c pubcloud-neutron.yaml
    #+END_SRC

**** Arguments
     - name: name of the deployment
     - config: config file
     - secret-path: path to secret config file
     - log: path to log file

*** Test

    Runs tests on a running OpenStack cluster

    #+BEGIN_SRC sh
      compute.py test --ha --tempest -n my_build -c pubcloud-neutron.yaml --iterations 3
    #+END_SRC

**** Arguments
     - ha: enables high availability testing
     - tempest: enables the tempest testing suite
     - name: name of the deployment
     - config: config file
     - secret-path: path to secret config file
     - log: path to log file
     - iterations: number of full test runs

*** Upgrade

    Upgrades the deployment to the specified branch

    #+BEGIN_SRC sh
      compute.py upgrade -n my_build -u v4.2.1 -c pubcloud-neutron.yaml
    #+END_SRC

**** Arguments
     - name: name of the deployment
     - upgrade-branch: branch to upgrade to
     - config: config file
     - secret-path: path to secret config file
     - log: path to log file

*** Tmux

    Opens an new tmux session with each node in a different window

    #+BEGIN_SRC sh
      compute.py tmux -n my_build -c pubcloud-neutron.yaml
    #+END_SRC

    *Requires tmux version >= 1.8*

    To add a 12.4 precise tmux 1.8 backport PPA, execute the following:

    #+BEGIN_SRC
      add-apt-repository -y ppa:kalakris/tmux
      apt-get update
      apt-get install tmux -y
    #+END_SRC

**** Arguments
     - name: name of the deployment
     - config: config file
     - secret-path: path to secret config file
     - log: path to log file

** Development

*** iPython

    To make development of monster easier you can load deployments using iPython and mess around with them:

    1. Start ~ipython~ in top monster directory
    2. Run
       #+BEGIN_SRC python
       from tools.ipython import load
       deployment = load("my_build", "configs/pubcloud-neutron.yaml")
       #+END_SRC
